
jwt.refreshToken.expirationTime=2592000000
jwt.accessToken.expirationTime=129600000


# TODO: etsi sopiva api. Tustututtu calendarificiin alustavasti
holidayChecker.apiKey=${HOLIDAY_API_KEY:localApiKey}
holidayChecker.url=${HOLIDAY_API_URL:localApiUrl}


# asetus, jotta voi jättää holiday api checkin pois päältä, koska apissa rajallisesti kutsuja
# jos false, käytetään tästä properties filestä löytyviä holiday päiviä
useHolidayApi=false

# Vakio pyhäpäivät (ei tarvitse päivittää vuosittain)
holidays.fixed=01-01,01-06,05-01,12-06,12-24,12-25,12-26

# Vaihtelevat pyhäpäivät (päivitettävä vuosittain)
holidays.variable=2023-04-07,2023-04-10,2023-05-18,2023-06-23


spring.datasource.url=${JDBC_DATABASE_URL:jdbc:postgresql://localhost:5432/alisatesti}
spring.datasource.username=${JDBC_DATABASE_USERNAME:akulonpa}
spring.datasource.password=${JDBC_DATABASE_PASSWORD:aukene}
# heroku käyttää spring boottia hostatessa environment variableja myös databaselle
# koska heroku postgres on saman appin resourcena. : jälkeiset on localhost setit
# localia ajettu ihan postgres official sivujen setupilla
spring.jpa.database=POSTGRESQL

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false
spring.datasource.driver-class-name=org.postgresql.Driver



spring.jpa.properties.hibernate.jbdc.time_zone=UTC  # käytetään UTC timestamppeihin kun ei tiedä missä host on

jwt.secret=${JWT_SECRET:localSecret}
# herokuun enviroment value, localissa localSecret
